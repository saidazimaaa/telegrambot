from pyrogram import Client, filters
from pyrogram.types import ReplyKeyboardMarkup, InlineKeyboardMarkup, InlineKeyboardButton

# –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API
api_id = 22957426
api_hash = "4af013cf971d55d07a351c04b72a1a2c"
bot_token = "7416310164:AAGXfL7cW9xSYd42uddzcG2jtjA-tqSt6Kw"

# –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
app = Client("FBMSurgeryBot", api_id=api_id, api_hash=api_hash, bot_token=bot_token)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
users_data = {}

@app.on_message(filters.command("start"))
def start(client, message):
    user_id = message.from_user.id
    if user_id not in users_data:
        message.reply_text(
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –ø–æ–º–æ—â–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞–º —Ö–∏—Ä—É—Ä–≥–∏—á–µ—Å–∫–æ–π —Å–µ–∫—Ü–∏–∏ –§–§–ú –ú–ì–£. "
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:"
        )
    else:
        show_main_menu(client, message)

@app.on_message(filters.text & ~filters.command(["start"]))
def register(client, message):
    user_id = message.from_user.id
    if user_id not in users_data:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é
        users_data[user_id] = {"name": message.text}
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–¥ –¥–ª—è –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö –≤ Google Sheets
        message.reply_text(f"–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, {users_data[user_id]['name']}!")
        show_main_menu(client, message)
    else:
        message.reply_text("–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!")

def show_main_menu(client, message):
    keyboard = InlineKeyboardMarkup([
        [InlineKeyboardButton("üìö –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∫–Ω–∏–≥", callback_data="library")],
        [InlineKeyboardButton("üìÖ –ö–æ–Ω—Ç—Ä–æ–ª—å –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏", callback_data="attendance")],
        [InlineKeyboardButton("üì∞ –ù–æ–≤–æ—Å—Ç–∏", callback_data="news")],
        [InlineKeyboardButton("üë• –°–æ–æ–±—â–µ—Å—Ç–≤–æ", callback_data="community")]
    ])
    message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:", reply_markup=keyboard)

@app.on_callback_query()
def callback_query(client, callback_query):
    if callback_query.data == "library":
        show_library_menu(client, callback_query.message)
    elif callback_query.data in ["abdominal_surgery", "basic_books", "lectures", "neurosurgery", "perelman",
                                 "plastic_surgery", "cardiac_surgery", "thoracic_surgery", "traumatology",
                                 "urology", "endoscopic_surgery"]:
        show_subsection_menu(client, callback_query.message, callback_query.data)
    elif callback_query.data == "attendance":
        show_attendance_menu(client, callback_query.message)
    elif callback_query.data == "news":
        show_news_menu(client, callback_query.message)
    elif callback_query.data == "community":
        show_community_menu(client, callback_query.message)
    elif callback_query.data == "back_to_library":
        show_library_menu(client, callback_query.message)
    elif callback_query.data == "back_to_main_menu":
        show_main_menu(client, callback_query.message)

def show_library_menu(client, message):
    library_keyboard = InlineKeyboardMarkup([
        [InlineKeyboardButton("–ê–±–¥–æ–º–∏–Ω–∞–ª—å–Ω–∞—è —Ö–∏—Ä—É—Ä–≥–∏—è", callback_data="abdominal_surgery")],
        [InlineKeyboardButton("–ë–∞–∑–æ–≤—ã–µ —É—á–µ–±–Ω–∏–∫–∏", callback_data="basic_books")],
        [InlineKeyboardButton("–õ–µ–∫—Ü–∏–∏", callback_data="lectures")],
        [InlineKeyboardButton("–ù–µ–π—Ä–æ—Ö–∏—Ä—É—Ä–≥–∏—è", callback_data="neurosurgery")],
        [InlineKeyboardButton("–ü–µ—Ä–µ–ª—å–º–∞–Ω", callback_data="perelman")],
        [InlineKeyboardButton("–ü–ª–∞—Å—Ç–∏—á–µ—Å–∫–∞—è —Ö–∏—Ä—É—Ä–≥–∏—è", callback_data="plastic_surgery")],
        [InlineKeyboardButton("–°–µ—Ä–¥–µ—á–Ω–æ-—Å–æ—Å—É–¥–∏—Å—Ç–∞—è —Ö–∏—Ä—É—Ä–≥–∏—è", callback_data="cardiac_surgery")],
        [InlineKeyboardButton("–¢–æ—Ä–∞–∫–∞–ª—å–Ω–∞—è —Ö–∏—Ä—É—Ä–≥–∏—è", callback_data="thoracic_surgery")],
        [InlineKeyboardButton("–¢—Ä–∞–≤–º–∞—Ç–æ–ª–æ–≥–∏—è", callback_data="traumatology")],
        [InlineKeyboardButton("–£—Ä–æ–ª–æ–≥–∏—è", callback_data="urology")],
        [InlineKeyboardButton("–≠–Ω–¥–æ–≤–∏–¥–µ–æ—Ö–∏—Ä—É—Ä–≥–∏—è", callback_data="endoscopic_surgery")],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_main_menu")]
    ])
    message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –∫–Ω–∏–≥:", reply_markup=library_keyboard)

def show_subsection_menu(client, message, section_name):
    subsection_keyboard = InlineKeyboardMarkup([
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_library")],
        [InlineKeyboardButton("üè† –û–±—â–µ–µ –º–µ–Ω—é", callback_data="back_to_main_menu")]
    ])
    
    # –ù–∞–∑–≤–∞–Ω–∏—è —Ä–∞–∑–¥–µ–ª–æ–≤ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
    section_titles = {
        "abdominal_surgery": "–ê–±–¥–æ–º–∏–Ω–∞–ª—å–Ω–∞—è —Ö–∏—Ä—É—Ä–≥–∏—è",
        "basic_books": "–ë–∞–∑–æ–≤—ã–µ —É—á–µ–±–Ω–∏–∫–∏",
        "lectures": "–õ–µ–∫—Ü–∏–∏",
        "neurosurgery": "–ù–µ–π—Ä–æ—Ö–∏—Ä—É—Ä–≥–∏—è",
        "perelman": "–ü–µ—Ä–µ–ª—å–º–∞–Ω",
        "plastic_surgery": "–ü–ª–∞—Å—Ç–∏—á–µ—Å–∫–∞—è —Ö–∏—Ä—É—Ä–≥–∏—è",
        "cardiac_surgery": "–°–µ—Ä–¥–µ—á–Ω–æ-—Å–æ—Å—É–¥–∏—Å—Ç–∞—è —Ö–∏—Ä—É—Ä–≥–∏—è",
        "thoracic_surgery": "–¢–æ—Ä–∞–∫–∞–ª—å–Ω–∞—è —Ö–∏—Ä—É—Ä–≥–∏—è",
        "traumatology": "–¢—Ä–∞–≤–º–∞—Ç–æ–ª–æ–≥–∏—è",
        "urology": "–£—Ä–æ–ª–æ–≥–∏—è",
        "endoscopic_surgery": "–≠–Ω–¥–æ–≤–∏–¥–µ–æ—Ö–∏—Ä—É—Ä–≥–∏—è"
    }
    
    selected_section = section_titles.get(section_name, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ä–∞–∑–¥–µ–ª")
    message.edit_text(f"–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ä–∞–∑–¥–µ–ª: {selected_section}", reply_markup=subsection_keyboard)

def show_attendance_menu(client, message):
    attendance_keyboard = InlineKeyboardMarkup([
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_main_menu")],
        [InlineKeyboardButton("üè† –û–±—â–µ–µ –º–µ–Ω—é", callback_data="back_to_main_menu")]
    ])
    message.edit_text("–ó–¥–µ—Å—å –±—É–¥–µ—Ç –∫–æ–Ω—Ç—Ä–æ–ª—å –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏.", reply_markup=attendance_keyboard)

def show_news_menu(client, message):
    news_keyboard = InlineKeyboardMarkup([
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_main_menu")],
        [InlineKeyboardButton("üè† –û–±—â–µ–µ –º–µ–Ω—é", callback_data="back_to_main_menu")]
    ])
    message.edit_text("–ó–¥–µ—Å—å –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –Ω–æ–≤–æ—Å—Ç–∏.", reply_markup=news_keyboard)

def show_community_menu(client, message):
    community_keyboard = InlineKeyboardMarkup([
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_main_menu")],
        [InlineKeyboardButton("üè† –û–±—â–µ–µ –º–µ–Ω—é", callback_data="back_to_main_menu")]
    ])
    message.edit_text("–ó–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–æ–±—â–µ—Å—Ç–≤–µ.", reply_markup=community_keyboard)

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
app.run()
